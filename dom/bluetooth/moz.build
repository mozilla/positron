# -*- Mode: python; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

if CONFIG['MOZ_B2G_BT']:

    #
    # Generic code
    #

    if CONFIG['MOZ_B2G_RIL']:
        SOURCES += [
            'common/BluetoothRilListener.cpp'
        ]

    SOURCES += [
        'common/BluetoothGattReplyRunnable.cpp',
        'common/BluetoothInterface.cpp',
        'common/BluetoothProfileController.cpp',
        'common/BluetoothReplyRunnable.cpp',
        'common/BluetoothService.cpp',
        'common/BluetoothUtils.cpp',
        'common/BluetoothUuidHelper.cpp',
        'common/ObexBase.cpp',
        'common/webapi/BluetoothAdapter.cpp',
        'common/webapi/BluetoothClassOfDevice.cpp',
        'common/webapi/BluetoothDevice.cpp',
        'common/webapi/BluetoothDiscoveryHandle.cpp',
        'common/webapi/BluetoothGatt.cpp',
        'common/webapi/BluetoothGattAttributeEvent.cpp',
        'common/webapi/BluetoothGattCharacteristic.cpp',
        'common/webapi/BluetoothGattDescriptor.cpp',
        'common/webapi/BluetoothGattServer.cpp',
        'common/webapi/BluetoothGattService.cpp',
        'common/webapi/BluetoothLeDeviceEvent.cpp',
        'common/webapi/BluetoothManager.cpp',
        'common/webapi/BluetoothMapRequestHandle.cpp',
        'common/webapi/BluetoothObexAuthHandle.cpp',
        'common/webapi/BluetoothPairingHandle.cpp',
        'common/webapi/BluetoothPairingListener.cpp',
        'common/webapi/BluetoothPbapRequestHandle.cpp',
        'common/webapi/BluetoothUUID.cpp',
        'ipc/BluetoothChild.cpp',
        'ipc/BluetoothParent.cpp',
        'ipc/BluetoothServiceChildProcess.cpp'
    ]
    LOCAL_INCLUDES += [
        'common',
        'common/webapi',
        'ipc'
    ]

    #
    # Bluetooth backends
    #

    if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gonk':
        if CONFIG['MOZ_B2G_BT_BLUEZ']:
            CXXFLAGS += CONFIG['MOZ_DBUS_CFLAGS']
            SOURCES += [
                'bluez/BluetoothA2dpManager.cpp',
                'bluez/BluetoothAvrcpManager.cpp',
                'bluez/BluetoothDBusService.cpp',
                'bluez/BluetoothHfpManager.cpp',
                'bluez/BluetoothHidManager.cpp',
                'bluez/BluetoothOppManager.cpp',
                'bluez/BluetoothSocket.cpp',
                'bluez/BluetoothUnixSocketConnector.cpp'
            ]
            LOCAL_INCLUDES += [
                'bluez',
            ]
            LOCAL_INCLUDES += [
                '%' + '%s/%s' % (CONFIG['ANDROID_SOURCE'], d) for d in [
                    'external/bluetooth/bluez/lib',
                    'external/dbus',
                ]
            ]
            DEFINES['MOZ_B2G_BT_BLUEZ'] = True
        elif CONFIG['MOZ_B2G_BT_DAEMON']:
            SOURCES += [
                'bluedroid/BluetoothA2dpManager.cpp',
                'bluedroid/BluetoothAvrcpManager.cpp',
                'bluedroid/BluetoothDaemonA2dpInterface.cpp',
                'bluedroid/BluetoothDaemonAvrcpInterface.cpp',
                'bluedroid/BluetoothDaemonCoreInterface.cpp',
                'bluedroid/BluetoothDaemonGattInterface.cpp',
                'bluedroid/BluetoothDaemonHandsfreeInterface.cpp',
                'bluedroid/BluetoothDaemonHelpers.cpp',
                'bluedroid/BluetoothDaemonHidInterface.cpp',
                'bluedroid/BluetoothDaemonInterface.cpp',
                'bluedroid/BluetoothDaemonSetupInterface.cpp',
                'bluedroid/BluetoothDaemonSocketInterface.cpp',
                'bluedroid/BluetoothGattManager.cpp',
                'bluedroid/BluetoothHidManager.cpp',
                'bluedroid/BluetoothMapBMessage.cpp',
                'bluedroid/BluetoothMapFolder.cpp',
                'bluedroid/BluetoothMapSmsManager.cpp',
                'bluedroid/BluetoothOppManager.cpp',
                'bluedroid/BluetoothPbapManager.cpp',
                'bluedroid/BluetoothServiceBluedroid.cpp',
                'bluedroid/BluetoothSocket.cpp',
                'bluedroid/BluetoothSocketMessageWatcher.cpp'
            ]
            LOCAL_INCLUDES += [
                'bluedroid',
            ]

            if CONFIG['MOZ_B2G_RIL']:
                SOURCES += [
                    'bluedroid/hfp/BluetoothHfpManager.cpp',
                ]
                LOCAL_INCLUDES += [
                    'bluedroid/hfp',
                ]
            else:
                SOURCES += [
                    'bluedroid/hfp-fallback/BluetoothHfpManager.cpp',
                ]
                LOCAL_INCLUDES += [
                    'bluedroid/hfp-fallback',
                ]

            DEFINES['MOZ_B2G_BT_DAEMON'] = True
    elif CONFIG['MOZ_ENABLE_DBUS']:
        CFLAGS += CONFIG['MOZ_DBUS_CFLAGS']
        CFLAGS += CONFIG['MOZ_DBUS_GLIB_CFLAGS']
        CXXFLAGS += CONFIG['MOZ_DBUS_CFLAGS']
        CXXFLAGS += CONFIG['MOZ_DBUS_GLIB_CFLAGS']
        SOURCES += [
            'bluez/BluetoothDBusService.cpp',
            'bluez/BluetoothHfpManager.cpp',
        ]
        LOCAL_INCLUDES += [
            'bluez',
        ]
        DEFINES['MOZ_BLUETOOTH_DBUS'] = True
        DEFINES['HAVE_PTHREADS'] = True

#
# Exported interfaces
#

EXPORTS.mozilla.dom.bluetooth.ipc += [
    'ipc/BluetoothMessageUtils.h',
]
EXPORTS.mozilla.dom.bluetooth += [
    'common/BluetoothCommon.h',
    'common/BluetoothGattUUIDName.h',
    'common/BluetoothHashKeys.h',
    'common/webapi/BluetoothAdapter.h',
    'common/webapi/BluetoothClassOfDevice.h',
    'common/webapi/BluetoothDevice.h',
    'common/webapi/BluetoothDiscoveryHandle.h',
    'common/webapi/BluetoothGatt.h',
    'common/webapi/BluetoothGattAttributeEvent.h',
    'common/webapi/BluetoothGattCharacteristic.h',
    'common/webapi/BluetoothGattDescriptor.h',
    'common/webapi/BluetoothGattServer.h',
    'common/webapi/BluetoothGattService.h',
    'common/webapi/BluetoothLeDeviceEvent.h',
    'common/webapi/BluetoothManager.h',
    'common/webapi/BluetoothMapRequestHandle.h',
    'common/webapi/BluetoothObexAuthHandle.h',
    'common/webapi/BluetoothPairingHandle.h',
    'common/webapi/BluetoothPairingListener.h',
    'common/webapi/BluetoothPbapRequestHandle.h'
]
EXPORTS.mozilla.dom += [
    'common/webapi/BluetoothUUID.h'
]

UNIFIED_SOURCES += [
    'common/BluetoothCommon.cpp',
]

IPDL_SOURCES += [
    'ipc/BluetoothTypes.ipdlh',
    'ipc/PBluetooth.ipdl',
    'ipc/PBluetoothRequest.ipdl'
]

LOCAL_INCLUDES += [
    '../base',
    '../network',
    '../system/gonk'
]

include('/ipc/chromium/chromium-config.mozbuild')

FINAL_LIBRARY = 'xul'
